{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/beach-resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\nconst RoomConsumer = RoomContext.Consumer;\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: true,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRoom = [...this.state.rooms];\n      const room = tempRoom.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handelChange = event => {\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; // all the rooms\n\n      let tempRooms = [...rooms]; // transform the value\n\n      capacity = parseInt(capacity); // filter bt type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      price = parseInt(price);\n      tempRooms = tempRooms.filter(room => room.price <= price); // change the stat\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handelChange: this.handelChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/beach-resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomConsumer","Consumer","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRoom","room","find","handelChange","event","target","value","checked","name","setState","filterRooms","tempRooms","parseInt","filter","componentDidMount","formatData","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport items from './data'\n\nconst RoomContext = React.createContext();\nconst RoomConsumer = RoomContext.Consumer;\n\n class RoomProvider extends Component{\n  state ={\n      rooms:[],\n      sortedRooms:[],\n      featuredRooms:[],\n      loading:true,\n      type:'all',\n      capacity:1,\n      price:0,\n      minPrice:0,\n      maxPrice:0,\n      minSize:0,\n      maxSize:0,\n      breakfast:true,\n      pets:false\n  }\n  componentDidMount() {\n    let rooms = this.formatData(items)\n    let featuredRooms = rooms.filter(room => room.featured ===true)\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n\n    this.setState({\n      rooms,featuredRooms,sortedRooms:rooms,loading:false,price:maxPrice,maxPrice,maxSize\n    })\n  }\n\n  formatData(items) {\n      let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image=> image.fields.file.url)\n      let room = {...item.fields,images,id};\n      return room;\n    })\n    return tempItems;\n  }\n  getRoom = (slug) => {\n    let tempRoom = [...this.state.rooms];\n    const room = tempRoom.find(room => room.slug===slug)\n    return room;\n  }\n  handelChange = event => {\n    const target = event.target\n    const value = event.type ==='checkbox' ? target.checked:target.value\n    const name = event.target.name\n    this.setState({\n      [name]:value\n    },this.filterRooms)\n\n  }\n  filterRooms = () => {\n      let {rooms,type,capacity,price,minSize,maxSize,breakfast,pets}=this.state\n      // all the rooms\n      let tempRooms = [...rooms];\n      // transform the value\n      capacity = parseInt(capacity)\n\n      // filter bt type\n      if(type!==\"all\") {\n        tempRooms = tempRooms.filter(room => room.type ===type)\n      }\n      // filter by capacity\n      if (capacity!==1){\n        tempRooms = tempRooms.filter(room => room.capacity >=capacity)\n      }\n      //filter by price\n      price = parseInt(price)\n      tempRooms = tempRooms.filter(room => room.price <= price);\n\n      // change the stat\n      this.setState({\n        sortedRooms:tempRooms\n      })\n  }\n  render() {\n    return (\n    <RoomContext.Provider value = {{...this.state,  getRoom:this.getRoom,handelChange:this.handelChange}}>\n      {this.props.children}\n   </RoomContext.Provider>\n    );\n  }\n}\n\nexport function withRoomConsumer(Component){\n  return function ConsumerWrapper(props){\n\n    return <RoomConsumer>\n      {value => <Component{...props} context = {value}/>}\n    </RoomConsumer>\n  }\n}\n\nexport {RoomProvider , RoomConsumer , RoomContext }\n"]},"metadata":{},"sourceType":"module"}