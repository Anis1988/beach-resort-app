{"ast":null,"code":"var _jsxFileName = \"/Users/anismedini/Desktop/code-js/beach-resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext();\nconst RoomConsumer = RoomContext.Consumer;\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      storedRooms: [],\n      featuredRooms: [] // loading:true\n\n    };\n\n    this.getRoom = slug => {\n      let tempRoom = [...this.state.rooms];\n      const room = tempRoom.find(room => room.slug === slug);\n      return room;\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true); // console.log(rooms)\n\n    this.setState({\n      rooms,\n      featuredRooms,\n      storedRooms: rooms,\n      loading: false\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/anismedini/Desktop/code-js/beach-resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomConsumer","Consumer","RoomProvider","state","rooms","storedRooms","featuredRooms","getRoom","slug","tempRoom","room","find","componentDidMount","formatData","filter","featured","setState","loading","tempItems","map","item","id","sys","images","fields","image","file","url","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AACA,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;;AAEC,MAAMC,YAAN,SAA2BN,SAA3B,CAAoC;AAAA;AAAA;AAAA,SACnCO,KADmC,GAC5B;AACHC,MAAAA,KAAK,EAAC,EADH;AAEHC,MAAAA,WAAW,EAAC,EAFT;AAGHC,MAAAA,aAAa,EAAC,EAHX,CAIH;;AAJG,KAD4B;;AAAA,SA0BnCC,OA1BmC,GA0BxBC,IAAD,IAAU;AAClB,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,KAAf,CAAf;AACA,YAAMM,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACF,IAAL,KAAYA,IAAlC,CAAb;AACA,aAAOE,IAAP;AACD,KA9BkC;AAAA;;AAOnCE,EAAAA,iBAAiB,GAAG;AAClB,QAAIR,KAAK,GAAG,KAAKS,UAAL,CAAgBhB,KAAhB,CAAZ;AACA,QAAIS,aAAa,GAAGF,KAAK,CAACU,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACK,QAAL,KAAiB,IAAtC,CAApB,CAFkB,CAGlB;;AACA,SAAKC,QAAL,CAAc;AACZZ,MAAAA,KADY;AACNE,MAAAA,aADM;AACQD,MAAAA,WAAW,EAACD,KADpB;AAC0Ba,MAAAA,OAAO,EAAC;AADlC,KAAd;AAGD;;AAEDJ,EAAAA,UAAU,CAAChB,KAAD,EAAQ;AACd,QAAIqB,SAAS,GAAGrB,KAAK,CAACsB,GAAN,CAAUC,IAAI,IAAI;AAElC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAuBM,KAAK,IAAGA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAjD,CAAb;AACA,UAAIjB,IAAI,GAAG,EAAC,GAAGU,IAAI,CAACI,MAAT;AAAgBD,QAAAA,MAAhB;AAAuBF,QAAAA;AAAvB,OAAX;AACA,aAAOX,IAAP;AACD,KANiB,CAAhB;AAOF,WAAOQ,SAAP;AACD;;AAMDU,EAAAA,MAAM,GAAG;AACP,wBACA,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAI,EAAC,GAAG,KAAKzB,KAAT;AAAiBI,QAAAA,OAAO,EAAC,KAAKA;AAA9B,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKsB,KAAL,CAAWC,QADd,CADA;AAKD;;AArCkC;;AA0CrC,SAAQ5B,YAAR,EAAuBF,YAAvB,EAAsCF,WAAtC","sourcesContent":["import React, { Component } from 'react';\nimport items from './data'\n\nconst RoomContext = React.createContext();\nconst RoomConsumer = RoomContext.Consumer;\n\n class RoomProvider extends Component{\n  state ={\n      rooms:[],\n      storedRooms:[],\n      featuredRooms:[],\n      // loading:true\n  }\n  componentDidMount() {\n    let rooms = this.formatData(items)\n    let featuredRooms = rooms.filter(room => room.featured ===true)\n    // console.log(rooms)\n    this.setState({\n      rooms,featuredRooms,storedRooms:rooms,loading:false\n    })\n  }\n\n  formatData(items) {\n      let tempItems = items.map(item => {\n\n      let id = item.sys.id;\n      let images = item.fields.images.map(image=> image.fields.file.url)\n      let room = {...item.fields,images,id};\n      return room;\n    })\n    return tempItems;\n  }\n  getRoom = (slug) => {\n    let tempRoom = [...this.state.rooms];\n    const room = tempRoom.find(room => room.slug===slug)\n    return room;\n  }\n  render() {\n    return (\n    <RoomContext.Provider value = {{...this.state,  getRoom:this.getRoom}}>\n      {this.props.children}\n   </RoomContext.Provider>\n    );\n  }\n}\n\n\n\nexport {RoomProvider , RoomConsumer , RoomContext }\n"]},"metadata":{},"sourceType":"module"}